[{"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/index.js":"1","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/reportWebVitals.js":"2","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/APP/index.js":"3","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/index.jsx":"4","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx":"5","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/canvas.jsx":"6","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/login.jsx":"7","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/firebase.js":"8","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/STUDENT_CANVAS/index.jsx":"9","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/libs/contextLibs.js":"10","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/SELECT_ROLE/index.jsx":"11"},{"size":564,"mtime":1610849273998,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610849273999,"results":"14","hashOfConfig":"13"},{"size":857,"mtime":1610879368716,"results":"15","hashOfConfig":"13"},{"size":3284,"mtime":1610876287344,"results":"16","hashOfConfig":"13"},{"size":13430,"mtime":1610881290865,"results":"17","hashOfConfig":"13"},{"size":0,"mtime":1610841155375,"results":"18","hashOfConfig":"13"},{"size":1337,"mtime":1610878762388,"results":"19","hashOfConfig":"13"},{"size":1062,"mtime":1610882073076,"results":"20","hashOfConfig":"13"},{"size":3686,"mtime":1610881585980,"results":"21","hashOfConfig":"13"},{"size":616,"mtime":1610877770601,"results":"22","hashOfConfig":"13"},{"size":5041,"mtime":1610880794858,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"c4u9r7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/index.js",[],["53","54"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/reportWebVitals.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/APP/index.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/index.jsx",["55","56","57","58","59"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport GoogleLogDiv from \"./login\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Logo from '../../assets/logo2.svg';\nimport Button from 'react-bootstrap/Button';\nimport SS from '../../assets/ss.png';\nimport Email from '../../assets/email.svg';\n\n\nconst CustomBtn = styled(Button)`\n    &.btn-login {\n        background-color:#B0BEC9;\n        margin-top:20px;\n        margin-bottom:20px;\n        font-weight: bold;\n        font-size: 40px;\n    }\n}\n`\n\nconst CustomH1 = styled.h1`\n    &.big {\n        font-size: 26px;\n        margin-top:20px;\n        margin-bottom:20px;\n    }\n    &.small {\n        font-size: 24px;\n        font-weight: lighter;\n        margin-bottom:20px;\n    }\n    &.big2 {\n        margin-top:50px;\n        font-size: 50px;\n        margin-bottom:0px;\n    }\n    &.small2 {\n        font-size: 36px;\n        font-weight: lighter;\n        margin-bottom: 65px;\n    }\n    &.big3 {\n        margin-top:20px;\n        font-size: 40px;\n    }\n    &.small3 {\n        font-size: 32px;\n        font-weight: lighter;\n        margin-bottom: 10px;\n    }\n`\n\nconst CustomHr = styled.hr`\n    border: 2px solid #E3F1FD;\n`\n\nconst CustomDiv = styled.div`\n    background-color: #FFFFFF;\n    height: 100vh;\n`\n\nconst CustomImg = styled.img`\n    margin-bottom:40px;\n`\nconst CustomImg2 = styled.img`\n    margin-Top:40px;\n`\n\nconst Homepage = () => {\n    document.title = \"myBoard.space - Home\"\n    return (\n        <CustomDiv>\n            <Container>\n                <Row style={{alignItems:\"center\"}} className=\"justify-content-center\">\n                    <Col style={{paddingRight:\"0px\"}} md=\"auto\">\n                        <CustomImg2 src={Logo} width=\"200\" height=\"200\"/>\n                    </Col>\n                    <Col style={{paddingLeft:\"0px\"}} className=\"align-self-end\" md=\"auto\">\n                        <div>\n                            <CustomH1 className=\"big2\">myBoard</CustomH1>\n                        </div>\n                        <div>\n                            <CustomH1 className=\"small2\">.space</CustomH1>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <CustomHr width=\"60%\"/>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <GoogleLogDiv/>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <CustomH1 className=\"big\">Bring your education to life using myBoard.space!</CustomH1>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <br/>\n                    <CustomH1 className=\"small\">Empowering students with real-time learning.</CustomH1>\n                    <br/>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    \n                </Row>\n            </Container>\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <CustomHr width=\"60%\"/>\n                </Row>\n            </Container>\n        </CustomDiv>\n    );\n}\n\nexport default Homepage;\n","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx",["60","61","62","63","64","65","66","67","68"],"import React, {useState, useRef, createRef} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Nav from \"react-bootstrap/Nav\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport iconLg from \"../../assets/eraser-icon-lg.svg\";\nimport app from \"../../firebase\";\nimport Logo from '../../assets/logo2.svg';\nimport {Redirect} from \"react-router-dom\";\n\nconst CanvasWrapper = styled.div`\n    border: 5px solid #B0BEC9;\n    margin-bottom:10px;\n`\n\nconst CustomBtn = styled(Button)`\n    margin:5px;\n    width:30px;\n    height:30px;\n\n    &.btn-red {\n        background-color:#F31B02;\n        margin-left:14px;\n    }\n    &.btn-green {\n        background-color:#50BE64;\n    }\n    &.btn-blue {\n        background-color:#1129FF;\n    }\n    &.btn-black {\n        background-color:#000000;\n    }\n    &.btn-yellow {\n        background-color:#F8E500;\n    }\n    &.btn-purple {\n        background-color:#B221C0;\n    }\n    &.btn-eLarge{\n        padding:0;\n        margin-left:10px;\n        display:block;\n        text-align:center;\n    }\n\n    &.btn-eraser{\n        padding:0;\n        display:block;\n        text-align:center;\n    }\n`\nconst Logoutbtn =styled(Button)`\n    margin-top:60px;\n    padding:20 px;\n    width: 60 px;\n    &.btn-primary,&.btn-primary:active:focus, &.btn-primary:active, &.btn-primary:focus, &.btn-primary:visited {\n        border: 0px;\n        background-color: #B0BEC9; \n        !important;\n    }\n\n    &.btn-primary:hover{\n        border: 0px;\n        color: #000000;\n        background-color: #E2F1FC; \n        !important;\n    }\n}\n`\n\nconst ButtonWrapper = styled.div`\n    display:flex;\n    align-items:center;\n`\n\nconst CustomDiv = styled.div`\n    height: 100vh;\n}\n`\nconst CustomH1 = styled.h1`\n    &.title {\n        margin-top:50px;\n        font-size: 40px;\n    }\n    &.subtitle {\n        font-size: 32px;\n        font-weight: lighter;\n        margin-bottom: 65px;\n    }\n\n    &.logout {\n        font-size: 30px;\n    }\n}`\n\nconst LogoImg = styled.img`\n    margin-Top:40px;\n`\n\nconst CanvasPage = () => {\n    const db = app.database();\n\n    const [brushColour, setBrushColour] = useState(\"#000000\");\n    const [brushSize, setBrushSize] = useState(\"1\");\n    const [gridHidden, setGridHidden] = useState(true);\n    const [eraserMode, setEraserMode] = useState(false);\n    const [redirect, setredirect] = useState(null)\n\n    \n    \n\n    const enableEraser = () => {\n        setEraserMode(true);\n    }\n\n    const disableEraser = () => {\n        setEraserMode(false);\n    }\n\n    const saveableCanvas = useRef(null);\n\n    if (redirect) {\n        return(<Redirect to={redirect}/>)\n    }\n\n    const pushData = (lineData) => {\n        db.ref('folder1/helloWord').update({\n            data: lineData\n        });\n    }\n\n    document.title = \"myBoard.space - Teacher\"\n\n    return (\n        <CustomDiv>\n            <Container>\n                <Row> \n                    <Col xs=\"auto\">\n                        <LogoImg src={Logo} width=\"150\" height=\"150\"/>\n                    </Col>\n                    <Col className=\"align-self-end\" xs=\"auto\">\n                        <div>\n                            <CustomH1 className=\"title\">myBoard</CustomH1>\n                        </div>\n                        <div>\n                            <CustomH1 className=\"subtitle\">.space</CustomH1>\n                        </div>\n                    </Col>\n                    <Col xs=\"auto\" className=\"ml-auto\">\n                        <Logoutbtn onClick={() => {\n                            setredirect('/');\n                        }} variant=\"primary\"><CustomH1 className=\"logout\">Logout</CustomH1></Logoutbtn>\n                    </Col>\n                </Row>\n                <CanvasWrapper>\n                        <CanvasDraw \n                        onChange={() => {\n                            pushData(saveableCanvas.current.getSaveData());\n                        }}\n                        ref={saveableCanvas}\n                        canvasWidth=\"100%\"\n                        canvasHeight=\"600px\"\n                        hideGrid={gridHidden}\n                        brushRadius={brushSize}\n                        lazyRadius='0'\n                        brushColor={eraserMode ? \"#FFFFFF\" : brushColour}/>\n                </CanvasWrapper>\n            </Container>\n            <Container>\n                <Row> \n                    <Col xs=\"auto\">\n                    <ButtonWrapper>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"red\" \n                            onClick={() => {\n                            if (eraserMode){\n                                setBrushColour(\"#FF0000\");\n                            }\n                            else {\n                                setBrushColour(\"#FF0000\");\n                            }}}>   \n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                            <CustomBtn variant=\"green\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#50BE64\");\n                                }\n                                else {\n                                    setBrushColour(\"#50BE64\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"blue\" \n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#1129FF\");\n                                }\n                                else {\n                                    setBrushColour(\"#1129FF\");\n                                }}}\n                            ></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"black\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#000000\");\n                                }\n                                else {\n                                    setBrushColour(\"#000000\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"yellow\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#F8E500\");\n                                }\n                                else {\n                                    setBrushColour(\"#F8E500\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"purple\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#B221C0\");\n                                }\n                                else {\n                                    setBrushColour(\"#B221C0\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                    </ButtonWrapper>\n                </Col>\n                <Col xs=\"auto\">\n                    <ButtonWrapper>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eLarge\" \n                            onClick={() => {  \n                                setBrushSize(\"20\");\n                            }}> \n                                <img style={{height:\"30px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => {  \n                                    setBrushSize(\"10\");\n                                }}> \n                                <img style={{height:\"22px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => { \n                                    setBrushSize(\"2\");\n                                }}> \n                                <img style={{height:\"15px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                    </ButtonWrapper>\n                </Col>  \n\n                <Col xs=\"3\">\n                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                    <ToggleButton value={1} onClick={disableEraser}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-brush\" viewBox=\"0 0 16 16\">\n                            <path d=\"M15.825.12a.5.5 0 0 1 .132.584c-1.53 3.43-4.743 8.17-7.095 10.64a6.067 6.067 0 0 1-2.373 1.534c-.018.227-.06.538-.16.868-.201.659-.667 1.479-1.708 1.74a8.117 8.117 0 0 1-3.078.132 3.658 3.658 0 0 1-.563-.135 1.382 1.382 0 0 1-.465-.247.714.714 0 0 1-.204-.288.622.622 0 0 1 .004-.443c.095-.245.316-.38.461-.452.393-.197.625-.453.867-.826.094-.144.184-.297.287-.472l.117-.198c.151-.255.326-.54.546-.848.528-.739 1.2-.925 1.746-.896.126.007.243.025.348.048.062-.172.142-.38.238-.608.261-.619.658-1.419 1.187-2.069 2.175-2.67 6.18-6.206 9.117-8.104a.5.5 0 0 1 .596.04zM4.705 11.912a1.23 1.23 0 0 0-.419-.1c-.247-.013-.574.05-.88.479a11.01 11.01 0 0 0-.5.777l-.104.177c-.107.181-.213.362-.32.528-.206.317-.438.61-.76.861a7.127 7.127 0 0 0 2.657-.12c.559-.139.843-.569.993-1.06a3.121 3.121 0 0 0 .126-.75l-.793-.792zm1.44.026c.12-.04.277-.1.458-.183a5.068 5.068 0 0 0 1.535-1.1c1.9-1.996 4.412-5.57 6.052-8.631-2.591 1.927-5.566 4.66-7.302 6.792-.442.543-.796 1.243-1.042 1.826a11.507 11.507 0 0 0-.276.721l.575.575zm-4.973 3.04l.007-.005a.031.031 0 0 1-.007.004zm3.582-3.043l.002.001h-.002z\"/>\n                        </svg>\n                    </ToggleButton>\n                    <ToggleButton value={2} onClick={enableEraser}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-eraser\" viewBox=\"0 0 16 16\">\n                            <path d=\"M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm2.121.707a1 1 0 0 0-1.414 0L4.16 7.547l5.293 5.293 4.633-4.633a1 1 0 0 0 0-1.414l-3.879-3.879zM8.746 13.547L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z\"/>\n                        </svg>\n                    </ToggleButton>\n                </ToggleButtonGroup>\n                </Col> \n                <Col>\n                    <Button size=\"lg\" variant=\"outline-danger\" \n                    onClick = {() => {\n                        //delData();\n                        saveableCanvas.current.clear();\n                    }}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n                        </svg>\n                    </Button>\n                    <Button size=\"lg\" variant=\"outline-danger\" \n                    onClick = {() => {\n                        saveableCanvas.current.undo();\n                    }}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-counterclockwise\" viewBox=\"0 0 16 16\">\n                            <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\"/>\n                            <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\"/>\n                        </svg>\n                  </Button>\n                </Col>\n            </Row>\n            <Row>\n                <p></p>\n            </Row>\n        </Container>\n        </CustomDiv>\n        \n    );\n}\n\nexport default CanvasPage;","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/canvas.jsx",["69","70","71","72"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/login.jsx",["73","74","75","76"],"import React, {useState, useEffect, useContext} from \"react\";\nimport styled from \"styled-components\";\nimport GoogleLogin from 'react-google-login';\nimport logo from \"../../assets/google_logo.svg\";\nimport useUserContext from \"../../libs/contextLibs\";\nimport { signInWithGoogle } from \"../../firebase\";\nimport { Redirect } from 'react-router-dom';\n\nconst StyledButton = styled.button`\n    margin:20px 0 20px 0;\n    display:flex;\n    justify-content:space-evenly;\n    align-items:center;\n    width:220px;\n    height:50px;\n    border-radius:25px;\n    border-width:0px;\n    background-color:#FFF;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`   \n\nconst StyledBtnText = styled.p`\n    font-weight:500;\n    margin:auto 0 auto 0;\n`\n\nconst GoogleLogDiv = () => {\n    const user  = useContext(useUserContext);\n    const [redirect, setredirect] = useState(null)\n\n    if (redirect) {\n        return(<Redirect to={redirect}/>)\n    }\n\n    return (    \n        <StyledButton onClick={() => {\n            signInWithGoogle();\n            setTimeout(() => {\n                setredirect('/select-role');\n            }, 6000);\n            }}>\n            <img style={{height:\"30px\"}}src={logo}/>\n            <StyledBtnText>Sign in with Google</StyledBtnText>\n        </StyledButton>\n    )\n}\n\nexport default GoogleLogDiv;",["77","78"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/firebase.js",["79"],"import firebase from \"firebase\"\nimport {useContext} from \"react\";\nimport dotenv from 'dotenv';\ndotenv.config()\n  \nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nconst app = firebase.initializeApp(config)\nexport default app;\n\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then((res) => {\n    console.log(res.user)\n  }).catch((error) => {\n    console.log(error.message)\n  })\n}\n\nexport const logOut = () => {\n    auth.signOut().then(()=> {\n      console.log('logged out')\n    }).catch((error) => {\n      console.log(error.message)\n    })\n  }","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/STUDENT_CANVAS/index.jsx",["80","81","82","83","84","85","86","87","88","89"],"import React, {useState, useRef, createRef, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Nav from \"react-bootstrap/Nav\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport app from \"../../firebase\";\nimport Logo from '../../assets/logo2.svg';\nimport {Redirect} from \"react-router-dom\";\n\nconst CanvasWrapper = styled.div`\n    border: 5px solid #B0BEC9;\n    margin-bottom:10px;\n`\n\nconst Logoutbtn =styled(Button)`\n    margin-top:60px;\n    padding:20 px;\n    width: 60 px;\n    &.btn-primary,&.btn-primary:active:focus, &.btn-primary:active, &.btn-primary:focus, &.btn-primary:visited {\n        border: 0px;\n        background-color: #B0BEC9; \n        !important;\n    }\n\n    &.btn-primary:hover{\n        border: 0px;\n        color: #000000;\n        background-color: #E2F1FC; \n        !important;\n    }\n}\n`\n\nconst CustomDiv = styled.div`\n    height: 100vh;\n}\n`\nconst CustomH1 = styled.h1`\n    &.title {\n        margin-top:50px;\n        font-size: 40px;\n    }\n    &.subtitle {\n        font-size: 32px;\n        font-weight: lighter;\n        margin-bottom: 65px;\n    }\n\n    &.logout {\n        font-size: 30px;\n    }\n}`\n\nconst LogoImg = styled.img`\n    margin-Top:40px;\n`\n\nconst StudentCanvasView = () => {\n    const db = app.database();\n    const [drawData, updateDrawData] = useState({});\n    const [redirect, setredirect] = useState(null)\n\n    const loadableCanvas = useRef(null);\n\n\n    useEffect(() => {\n        db.ref('folder1/helloWord/data').on('value', (snapshot) => {\n            const data = snapshot.val();\n            updateDrawData(data);\n            loadableCanvas.current.loadSaveData(data, true)\n        })\n    },[]);\n\n    if (redirect) {\n        return(<Redirect to={redirect}/>)\n    }\n\n    document.title = \"myBoard.space - Student\"\n    return (\n        <CustomDiv>\n            <Container>\n                <Row> \n                    <Col xs=\"auto\">\n                        <LogoImg src={Logo} width=\"150\" height=\"150\"/>\n                    </Col>\n                    <Col className=\"align-self-end\" xs=\"auto\">\n                        <div>\n                            <CustomH1 className=\"title\">myBoard</CustomH1>\n                        </div>\n                        <div>\n                            <CustomH1 className=\"subtitle\">.space</CustomH1>\n                        </div>\n                    </Col>\n                    <Col xs=\"auto\" className=\"ml-auto\">\n                        <Logoutbtn onClick={() => {\n                            setredirect('/');\n                        }} variant=\"primary\"><CustomH1 className=\"logout\">Logout</CustomH1></Logoutbtn>\n                    </Col>\n                </Row>\n                <CanvasWrapper>\n                    <CanvasDraw \n                    hideGrid=\"true\"\n                    disabled=\"true\"\n                    ref={loadableCanvas}\n                    canvasWidth=\"100%\"\n                    canvasHeight=\"600px\"\n                    immediateLoading=\"false\"\n                    hideInterface=\"true\"\n                    // saveData={drawData}\n                    />   \n                </CanvasWrapper>\n            </Container>\n        </CustomDiv>\n    )\n}\n\nexport default StudentCanvasView;","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/libs/contextLibs.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/SELECT_ROLE/index.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":10},{"ruleId":"94","severity":1,"message":"99","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":13},{"ruleId":"94","severity":1,"message":"100","line":14,"column":7,"nodeType":"96","messageId":"97","endLine":14,"endColumn":16},{"ruleId":"94","severity":1,"message":"101","line":66,"column":7,"nodeType":"96","messageId":"97","endLine":66,"endColumn":16},{"ruleId":"94","severity":1,"message":"102","line":1,"column":34,"nodeType":"96","messageId":"97","endLine":1,"endColumn":43},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"94","severity":1,"message":"104","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"105","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":22},{"ruleId":"94","severity":1,"message":"106","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":11},{"ruleId":"94","severity":1,"message":"107","line":115,"column":24,"nodeType":"96","messageId":"97","endLine":115,"endColumn":37},{"ruleId":"108","severity":1,"message":"109","line":254,"column":33,"nodeType":"110","endLine":254,"endColumn":76},{"ruleId":"108","severity":1,"message":"109","line":262,"column":33,"nodeType":"110","endLine":262,"endColumn":76},{"ruleId":"108","severity":1,"message":"109","line":270,"column":33,"nodeType":"110","endLine":270,"endColumn":76},{"ruleId":"94","severity":1,"message":"111","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"112","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":33},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"94","severity":1,"message":"113","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"114","line":1,"column":26,"nodeType":"96","messageId":"97","endLine":1,"endColumn":35},{"ruleId":"94","severity":1,"message":"115","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"94","severity":1,"message":"116","line":28,"column":11,"nodeType":"96","messageId":"97","endLine":28,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":42,"column":13,"nodeType":"110","endLine":42,"endColumn":53},{"ruleId":"90","replacedBy":"117"},{"ruleId":"92","replacedBy":"118"},{"ruleId":"94","severity":1,"message":"119","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":19},{"ruleId":"94","severity":1,"message":"102","line":1,"column":34,"nodeType":"96","messageId":"97","endLine":1,"endColumn":43},{"ruleId":"94","severity":1,"message":"103","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"94","severity":1,"message":"120","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":19},{"ruleId":"94","severity":1,"message":"104","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"105","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":22},{"ruleId":"94","severity":1,"message":"106","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":11},{"ruleId":"94","severity":1,"message":"121","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":20},{"ruleId":"94","severity":1,"message":"122","line":14,"column":8,"nodeType":"96","messageId":"97","endLine":14,"endColumn":25},{"ruleId":"94","severity":1,"message":"123","line":69,"column":12,"nodeType":"96","messageId":"97","endLine":69,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":81,"column":7,"nodeType":"126","endLine":81,"endColumn":9,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'SS' is defined but never used.","'Email' is defined but never used.","'CustomBtn' is assigned a value but never used.","'CustomImg' is assigned a value but never used.","'createRef' is defined but never used.","'ReactDOM' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Nav' is defined but never used.","'setGridHidden' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useRef' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'GoogleLogin' is defined but never used.","'user' is assigned a value but never used.",["128"],["129"],"'useContext' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'drawData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [db]",{"range":"133","text":"134"},[2144,2146],"[db]"]