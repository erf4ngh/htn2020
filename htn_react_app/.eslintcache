[{"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/index.js":"1","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/reportWebVitals.js":"2","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/APP/index.js":"3","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/index.jsx":"4","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx":"5","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/canvas.jsx":"6","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/login.jsx":"7","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/firebase.js":"8","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/STUDENT_CANVAS/index.jsx":"9"},{"size":564,"mtime":1610849273998,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610849273999,"results":"12","hashOfConfig":"11"},{"size":598,"mtime":1610855772558,"results":"13","hashOfConfig":"11"},{"size":3240,"mtime":1610867388930,"results":"14","hashOfConfig":"11"},{"size":13116,"mtime":1610862198854,"results":"15","hashOfConfig":"11"},{"size":0,"mtime":1610841155375,"results":"16","hashOfConfig":"11"},{"size":1319,"mtime":1610867441890,"results":"17","hashOfConfig":"11"},{"size":501,"mtime":1610852250220,"results":"18","hashOfConfig":"11"},{"size":1711,"mtime":1610861246064,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"c4u9r7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/index.js",[],["41","42"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/reportWebVitals.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/APP/index.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/index.jsx",["43","44","45","46","47"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx",["48","49","50","51","52","53","54","55","56"],"import React, {useState, useRef, createRef} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Nav from \"react-bootstrap/Nav\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport iconLg from \"../../assets/eraser-icon-lg.svg\";\nimport app from \"../../firebase\";\n\nconst CanvasWrapper = styled.div`\n    border: 5px solid red;\n    margin-bottom:10px;\n`\n\nconst CustomBtn = styled(Button)`\n    margin:5px;\n    width:30px;\n    height:30px;\n\n    &.btn-red {\n        background-color:#F31B02;\n        margin-left:14px;\n    }\n    &.btn-green {\n        background-color:#50BE64;\n    }\n    &.btn-blue {\n        background-color:#1129FF;\n    }\n    &.btn-black {\n        background-color:#000000;\n    }\n    &.btn-yellow {\n        background-color:#F8E500;\n    }\n    &.btn-purple {\n        background-color:#B221C0;\n    }\n    &.btn-eLarge{\n        padding:0;\n        margin-left:18px;\n        display:block;\n        text-align:center;\n        border: 1px solid black;\n    }\n\n    &.btn-eraser{\n        padding:0;\n        display:block;\n        text-align:center;\n        border: 1px solid black;\n    }\n`\n\nconst ButtonWrapper = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:space-around;\n`\n\nconst CanvasPage = () => {\n    const db = app.database();\n\n    const [brushColour, setBrushColour] = useState(\"#000000\");\n    const [brushSize, setBrushSize] = useState(\"1\");\n    const [gridHidden, setGridHidden] = useState(true);\n    const [eraserMode, setEraserMode] = useState(false);\n\n    const enableEraser = () => {\n        setEraserMode(true);\n    }\n\n    const disableEraser = () => {\n        setEraserMode(false);\n    }\n\n    const saveableCanvas = useRef(null);\n\n    const pushData = (lineData) => {\n        db.ref('folder1/helloWord').update({\n            data: lineData\n        });\n    }\n\n    // const delData = () => {\n    //     db.ref('folder1/helloWord').set({\n    //         data:\"\"\n    //     });\n    // }\n\n    return (\n        <>\n        <CanvasWrapper>\n                <CanvasDraw \n                    onChange={() => {\n                        pushData(saveableCanvas.current.getSaveData());\n                    }}\n                    ref={saveableCanvas}\n                    canvasWidth=\"100%\"\n                    canvasHeight=\"600px\"\n                    hideGrid={gridHidden}\n                    brushRadius={brushSize}\n                    lazyRadius='0'\n                    brushColor={eraserMode ? \"#FFFFFF\" : brushColour}/>\n        </CanvasWrapper>\n        <Container>\n            <Row md={5}> \n                <Col sm={4}>\n                    <ButtonWrapper>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"red\" \n                            onClick={() => {\n                            if (eraserMode){\n                                setBrushColour(\"#FF0000\");\n                            }\n                            else {\n                                setBrushColour(\"#FF0000\");\n                            }}}>   \n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                            <CustomBtn variant=\"green\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#50BE64\");\n                                }\n                                else {\n                                    setBrushColour(\"#50BE64\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"blue\" \n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#1129FF\");\n                                }\n                                else {\n                                    setBrushColour(\"#1129FF\");\n                                }}}\n                            ></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"black\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#000000\");\n                                }\n                                else {\n                                    setBrushColour(\"#000000\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"yellow\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#F8E500\");\n                                }\n                                else {\n                                    setBrushColour(\"#F8E500\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"purple\"\n                            onClick={() => {\n                                if (eraserMode){\n                                    setBrushColour(\"#B221C0\");\n                                }\n                                else {\n                                    setBrushColour(\"#B221C0\");\n                                }}}></CustomBtn>\n                        </ButtonGroup>\n                    </ButtonWrapper>\n                </Col>\n                <Col sm={4}>\n                    <ButtonWrapper>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eLarge\" \n                            onClick={() => {  \n                                setBrushSize(\"20\");\n                            }}> \n                                <img style={{height:\"30px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => {  \n                                    setBrushSize(\"10\");\n                                }}> \n                                <img style={{height:\"22px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => { \n                                    setBrushSize(\"2\");\n                                }}> \n                                <img style={{height:\"15px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                    </ButtonWrapper>\n                </Col>  \n\n                <Col sm={4}>\n                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                    <ToggleButton value={1} onClick={disableEraser}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-brush\" viewBox=\"0 0 16 16\">\n                            <path d=\"M15.825.12a.5.5 0 0 1 .132.584c-1.53 3.43-4.743 8.17-7.095 10.64a6.067 6.067 0 0 1-2.373 1.534c-.018.227-.06.538-.16.868-.201.659-.667 1.479-1.708 1.74a8.117 8.117 0 0 1-3.078.132 3.658 3.658 0 0 1-.563-.135 1.382 1.382 0 0 1-.465-.247.714.714 0 0 1-.204-.288.622.622 0 0 1 .004-.443c.095-.245.316-.38.461-.452.393-.197.625-.453.867-.826.094-.144.184-.297.287-.472l.117-.198c.151-.255.326-.54.546-.848.528-.739 1.2-.925 1.746-.896.126.007.243.025.348.048.062-.172.142-.38.238-.608.261-.619.658-1.419 1.187-2.069 2.175-2.67 6.18-6.206 9.117-8.104a.5.5 0 0 1 .596.04zM4.705 11.912a1.23 1.23 0 0 0-.419-.1c-.247-.013-.574.05-.88.479a11.01 11.01 0 0 0-.5.777l-.104.177c-.107.181-.213.362-.32.528-.206.317-.438.61-.76.861a7.127 7.127 0 0 0 2.657-.12c.559-.139.843-.569.993-1.06a3.121 3.121 0 0 0 .126-.75l-.793-.792zm1.44.026c.12-.04.277-.1.458-.183a5.068 5.068 0 0 0 1.535-1.1c1.9-1.996 4.412-5.57 6.052-8.631-2.591 1.927-5.566 4.66-7.302 6.792-.442.543-.796 1.243-1.042 1.826a11.507 11.507 0 0 0-.276.721l.575.575zm-4.973 3.04l.007-.005a.031.031 0 0 1-.007.004zm3.582-3.043l.002.001h-.002z\"/>\n                        </svg>\n                    </ToggleButton>\n                    <ToggleButton value={2} onClick={enableEraser}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-eraser\" viewBox=\"0 0 16 16\">\n                            <path d=\"M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm2.121.707a1 1 0 0 0-1.414 0L4.16 7.547l5.293 5.293 4.633-4.633a1 1 0 0 0 0-1.414l-3.879-3.879zM8.746 13.547L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z\"/>\n                        </svg>\n                    </ToggleButton>\n                </ToggleButtonGroup>\n                {/* <DropdownButton size=\"lg\" as={ButtonGroup} title=\"Eraser\" id=\"bg-vertical-dropdown-1\">\n                    <ButtonWrapper>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eLarge\" \n                            onClick={() => {   \n                                enableEraser(\"35\");\n                            }}> \n                                <img style={{height:\"30px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => {   \n                                    enableEraser(\"20\");\n                                }}> \n                                <img style={{height:\"22px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Third group\">\n                            <CustomBtn variant=\"eraser\" \n                                onClick={() => {   \n                                    enableEraser(\"15\");\n                                }}> \n                                <img style={{height:\"15px\"}} src={iconLg}/>\n                            </CustomBtn>\n                        </ButtonGroup>\n                    </ButtonWrapper>\n                </DropdownButton> */}\n                </Col> \n                <Col>\n                    <Button size=\"lg\" variant=\"outline-danger\" \n                    onClick = {() => {\n                        //delData();\n                        saveableCanvas.current.clear();\n                    }}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n                        </svg>\n                    </Button>\n                    <Button size=\"lg\" variant=\"outline-danger\" \n                    onClick = {() => {\n                        saveableCanvas.current.undo();\n                    }}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-counterclockwise\" viewBox=\"0 0 16 16\">\n                            <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\"/>\n                            <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\"/>\n                        </svg>\n                  </Button>\n                </Col>\n                 \n            </Row>\n        </Container>\n        \n        </>\n        \n    );\n}\n\nexport default CanvasPage;","/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/canvas.jsx",["57","58","59","60"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/HOMEPAGE/login.jsx",["61"],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/firebase.js",[],"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/STUDENT_CANVAS/index.jsx",["62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, {useState, useRef, createRef, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Nav from \"react-bootstrap/Nav\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport app from \"../../firebase\";\n\nconst CanvasWrapper = styled.div`\n    border: 5px solid red;\n    margin-bottom:10px;\n`\n\nconst StudentCanvasView = () => {\n    const db = app.database();\n    const [drawData, updateDrawData] = useState({});\n\n    const loadableCanvas = useRef(null);\n\n    useEffect(() => {\n        db.ref('folder1/helloWord/data').on('value', (snapshot) => {\n            const data = snapshot.val();\n            updateDrawData(data);\n            loadableCanvas.current.loadSaveData(data, true)\n        })\n    },[]);\n\n    return (\n        <>\n            <CanvasWrapper>\n                <CanvasDraw \n                    hideGrid=\"true\"\n                    disabled=\"true\"\n                    ref={loadableCanvas}\n                    canvasWidth=\"100%\"\n                    canvasHeight=\"600px\"\n                    immediateLoading=\"false\"\n                    // saveData={drawData}\n                    />\n                    \n            </CanvasWrapper>\n        </>\n    )\n}\n\nexport default StudentCanvasView;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":10},{"ruleId":"80","severity":1,"message":"85","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":14,"column":7,"nodeType":"82","messageId":"83","endLine":14,"endColumn":16},{"ruleId":"80","severity":1,"message":"87","line":66,"column":7,"nodeType":"82","messageId":"83","endLine":66,"endColumn":16},{"ruleId":"80","severity":1,"message":"88","line":1,"column":34,"nodeType":"82","messageId":"83","endLine":1,"endColumn":43},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"90","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"91","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":22},{"ruleId":"80","severity":1,"message":"92","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":11},{"ruleId":"80","severity":1,"message":"93","line":74,"column":24,"nodeType":"82","messageId":"83","endLine":74,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":189,"column":33,"nodeType":"96","endLine":189,"endColumn":76},{"ruleId":"94","severity":1,"message":"95","line":197,"column":33,"nodeType":"96","endLine":197,"endColumn":76},{"ruleId":"94","severity":1,"message":"95","line":205,"column":33,"nodeType":"96","endLine":205,"endColumn":76},{"ruleId":"80","severity":1,"message":"97","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"98","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":33},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"99","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":34,"column":17,"nodeType":"96","endLine":34,"endColumn":57},{"ruleId":"80","severity":1,"message":"88","line":1,"column":34,"nodeType":"82","messageId":"83","endLine":1,"endColumn":43},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"100","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":14},{"ruleId":"80","severity":1,"message":"101","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":19},{"ruleId":"80","severity":1,"message":"90","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"91","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":22},{"ruleId":"80","severity":1,"message":"102","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":17},{"ruleId":"80","severity":1,"message":"103","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":11},{"ruleId":"80","severity":1,"message":"104","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":11},{"ruleId":"80","severity":1,"message":"92","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":11},{"ruleId":"80","severity":1,"message":"105","line":13,"column":8,"nodeType":"82","messageId":"83","endLine":13,"endColumn":20},{"ruleId":"80","severity":1,"message":"106","line":14,"column":8,"nodeType":"82","messageId":"83","endLine":14,"endColumn":25},{"ruleId":"80","severity":1,"message":"107","line":24,"column":12,"nodeType":"82","messageId":"83","endLine":24,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":34,"column":7,"nodeType":"110","endLine":34,"endColumn":9,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'SS' is defined but never used.","'Email' is defined but never used.","'CustomBtn' is assigned a value but never used.","'CustomImg' is assigned a value but never used.","'createRef' is defined but never used.","'ReactDOM' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Nav' is defined but never used.","'setGridHidden' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useRef' is defined but never used.","'styled' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'drawData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [db]",{"range":"117","text":"118"},[1216,1218],"[db]"]