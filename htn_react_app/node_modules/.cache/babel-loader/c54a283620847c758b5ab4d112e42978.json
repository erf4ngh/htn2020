{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport Canvas from \"./canvas\";\n\nconst CanvasPage = () => {\n  _s();\n\n  const [brushColour, setBrushColour] = useState(\"#000000\");\n  const [brushSize, setBrushSize] = useState(\"0.2\");\n  const [gridActive, setGridActive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    paintColour: brushColour,\n    brushRad: brushSize\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CanvasPage, \"+Zp5Tx6xgGdfpDIfqx0kEV9mWTc=\");\n\n_c = CanvasPage;\nexport default CanvasPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanvasPage\");","map":{"version":3,"sources":["/Users/kevin/Documents/Code/JS/React/htn_2020/htn2020/htn_react_app/src/components/CANVAS/index.jsx"],"names":["React","useState","ReactDOM","styled","Canvas","CanvasPage","brushColour","setBrushColour","brushSize","setBrushSize","gridActive","setGridActive"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACI,QAAC,MAAD;AACI,IAAA,WAAW,EAAIK,WADnB;AAEI,IAAA,QAAQ,EAAIE;AAFhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAVD;;GAAMH,U;;KAAAA,U;AAYN,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport Canvas from \"./canvas\";\n\nconst CanvasPage = () => {\n    const [brushColour, setBrushColour] = useState(\"#000000\");\n    const [brushSize, setBrushSize] = useState(\"0.2\");\n    const [gridActive, setGridActive] = useState(false)\n\n    return (\n        <Canvas\n            paintColour = {brushColour}\n            brushRad = {brushSize}/>\n    );\n}\n\nexport default CanvasPage;"]},"metadata":{},"sourceType":"module"}